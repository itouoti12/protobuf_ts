name: make protobuf test

on:
  push:
    branches:
      - master
    paths:
      - "src/proto/example.proto"

  workflow_dispatch:

permissions:
  id-token: write
  contents: read


jobs:

  Generate:
    # The type of runner that the job will run on
    name: generate protobuf module ts file.
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: actions/setup-node@v3
        id: setup_node_id
        with:
          node-version: '18'

      - name: Add module
        run: |
          yarn install
          yarn add @bufbuild/protobuf @bufbuild/protoc-gen-es @bufbuild/buf

      - name: Add setting file
        run: |
          echo "# Learn more: https://docs.buf.build/configuration/v1/buf-gen-yaml" > buf.gen.yaml
          echo "version: v1" >> buf.gen.yaml
          echo "plugins:" >> buf.gen.yaml
          echo "   - plugin: es" >> buf.gen.yaml
          echo "     opt: target=ts" >> buf.gen.yaml
          echo "     out: ./gen" >> buf.gen.yaml

      - name: confirm path
        run: |
          pwd
          ls -ltr


      - name: generate module 
        run: |
          npx buf generate ./src/proto/hoge/

      - name: confirm file 
        run: |
          pwd
          ls -ltr

      - name: Setup commit description
        env:
          RUN_URL: "${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}"
          HEAD_COMMIT_URL: "${{ github.event.repository.html_url }}/commit/${{ github.event.after || github.sha }}"
        id: setup_description
        run: |
          DESCRIPTION=$(cat << EOF
          update proto file 🚀

          created from ${{ env.RUN_URL }}
          latest commit: ${{ env.HEAD_COMMIT_URL }}
          EOF
          )
          DESCRIPTION="${DESCRIPTION//$'\n'/'%0A'}"
          echo "::set-output name=content::$DESCRIPTION"

      - name: Copy & push branch protobuf file to accept_protobuf_ts
        uses: dmnemec/copy_file_to_another_repo_action@v1.1.1
        env:
          API_TOKEN_GITHUB: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          source_file: "./gen/"
          destination_repo: "itouoti12/accept_protobuf_ts"
          destination_folder: "src/websocket/"
          destination_branch: "master"
          destination_branch_create: "feature/update-protobuf-ts"
          user_email: "github-actions[bot]@users.noreply.github.com"
          user_name: "github-actions[bot]"
          commit_message: ${{ steps.setup_description.outputs.content }}

      - name: create Pull Request to accept_protobuf_ts
        run: |
          gh pr create \
            --title "update proto file " \
            --body "${{ steps.setup_description.outputs.content }}" \
            --repo itouoti12/accept_protobuf_ts \
            --base master \
            --head feature/update-protobuf-ts \
            --reviewer itouoti12
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: example_pb.zip
          path: ./gen

      - name: failure cause message
        if: failure()
        run: |
          echo "PR作成対象のブランチが既に存在しているため、failedとなりました。"
